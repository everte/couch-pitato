<%# Iterate the list of lights %>
<%# <h1 class="text-red-500 text-5xl font-bold text-center">Lights</h1> %>

<%= for light <- @lights do %>
      <div class="font-bold text-grey-800 text-center"><%= light.ui_name %></div>

      <div class="flex justify-center flex-row flex-nowrap">
      
      <div class="basis-1/6">
        <button class="p-2 pl-5 pr-5 bg-blue-500 text-gray-100 text-lg rounded-lg focus:border-4 border-blue-300"  phx-click="off" phx-value-key={ light.name } phx-value-colour={:w }>
          Off
        </button>
      </div>

      <%= if light.rgb == false do %>
      <div class="basis-2/12">
        <button class="button button-clear" phx-click="down" phx-value-key={ light.name } phx-value-colour= { :w }>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z"/>
          </svg>
        </button>

      </div>
      
      <div class="basis-4/12">
      <form phx-change="change" phx-value-key="t">
        <input name="slider" style="touch-action: none;" type="range" min="0" max="255" step="8" value={  Map.get(@lights_state, String.to_atom(light.name), %Ui.Firmware.LightState{}) |> Map.get(:w)} class="">
        <input type="hidden" name="key" value={ light.name }> 
        <input type="hidden" name="colour" value={ Atom.to_string(:w) } > 
      </form>
      </div>
      
      
      <div class="basis-2/12">
    <button class="button button-clear" phx-click="up" phx-value-key={ light.name } phx-value-colour= { Atom.to_string(:w) }>
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z"/>
</svg>
      </button>
      </div>
      <% end %>
      <%= if light.rgb == true do %>
        <div class="basis-2/12"></div>
        <div class="basis-2/12">
          <div id="container" phx-hook="Colors">
            <form phx-change="change" phx-value-key={ light.name } >
              <input type="hidden" name="key" value={ light.name }> 
              <input readonly="readonly"  style={"background: #{ UiWeb.Lights.get_colour(@lights_state, light.name)} "}_type="text" name="colour" id="testcolour" data-coloris value={ get_colour(@lights_state, light.name)}>
            </form>
          </div>
          </div>
        <div class="basis-1/12"></div>
          <div class="basis-2/12">
            <button class="button button-clear" phx-click="like_colour" phx-value-key={ light.name } phx-value-hex= { get_colour(@lights_state, light.name) }>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
              </svg> 
            </button>
          </div> 
        <div class="basis-1/12"></div>
      <% end %>
      
      <div class="basis-1/6">
        <button class="p-2 pl-5 pr-5 bg-blue-500 text-gray-100 text-lg rounded-lg focus:border-4 border-blue-300"  phx-click="on" phx-value-key={ light.name } phx-value-colour={ :w}>on</button>  
      </div>
    </div>
<% end %>
